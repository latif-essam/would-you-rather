{"version":3,"sources":["actions/authedUser.js","components/Nav.js","utils/helpers.js","components/UserView.js","components/User.js","components/Alert.js","components/Footer.js","components/Login.js","utils/_Data.js","utils/API.js","actions/users.js","actions/questions.js","actions/shared.js","components/Score.js","components/Leader.js","components/Leaderboard.js","components/NewQS.js","components/QSView.js","components/QS.js","components/Questions.js","components/Separator.js","components/QSDetailsVote.js","components/QSDetailsResult.js","components/QSDetails.js","components/App.js","middleware/logger.js","middleware/index.js","reducers/index.js","reducers/autheUser.js","reducers/users.js","reducers/questions.js","index.js"],"names":["SET_AUTHED_USER","REMOVE_AUTHED_USER","connect","authedUser","user","users","dispatch","toggleLogin","e","type","authedState","ListView","style","width","listItemStyle","display","border","marginBottom","marginTop","paddingBottom","paddingTop","listSource","className","data-bs-toggle","data-bs-placement","title","to","Icon","borderRadius","name","src","avatarURL","alt","marginLeft","padding","onClick","formatDate","timestamp","d","Date","toLocaleTimeString","toLocaleDateString","UserView","me","viewType","currentView","normal","col1","fs","imgSize","board","question","login","fontSize","id","handleLogin","Alert","children","currentAlert","danger","text","alert","warning","info","main","role","Footer","usersIds","Object","keys","userId","margin","renderTitle","map","sarahedo","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","optionOne","votes","optionTwo","_saveQuestion","Promise","res","rej","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","qid","answer","_saveQuestionAnswer","RECEIVE_USERS","SET_USER_QUESTION","SET_USER_ANSWER","ADD_USER","ADD_QUESTION","SET_QUESTION_ANSWER","RECEIVE_QUESTIONS","handleAddQuestion","a","b","showLoading","then","addQuestion","setUserQuestion","hideLoading","handleSetQuestionAnswer","setQuestionAnswer","setUserAnswer","handleInitialData","all","receiveUsers","receiveQuestions","Score","asked","answered","total","isMe","length","maxWidth","window","innerWidth","minWidth","usersIDS","sort","useState","pollOne","setPollOne","pollTwo","setPollTwo","justifyContent","height","onSubmit","preventDefault","htmlFor","onChange","target","value","typeof","QSView","q","withRouter","nameSize","imageSize","direction","unAnsweredQS","values","filter","includes","AnsweredQS","currentTab","setCurrentTab","sortedAnsweredQS","sortedUnAnsweredQS","data-bs-target","aria-controls","aria-selected","icon","color","background","aria-labelledby","listStyle","Separator","props","QSDetailsVote","saveQsAns","currentVote","setCurrentVote","handleChange","selectedVote","currentTarget","checked","disabled","QSDetailsResult","vote","votesAnswer1","votesAnswer2","allAnswers","percentageAnswer1","round","percentageAnswer2","exact","match","params","questionExists","isAnswered","screenWidth","setScreenWidth","useEffect","addEventListener","App","images","1","2","3","this","readyState","Theme","theme","getTheme","themeName","accent","useFluentDesign","desktopBackgroundImage","path","component","Questions","QSDetails","NewQS","Leaderboard","Component","logger","store","next","action","console","group","log","returnValue","groupEnd","applyMiddleware","thunk","combineReducers","state","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d48d515e.chunk.js","sourcesContent":["export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\r\nexport const REMOVE_AUTHED_USER = \"REMOVE_AUTHED_USER\";\r\n\r\nexport function setAuthedUser(id) {\r\n  return {\r\n    type: SET_AUTHED_USER,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function removeAuthedUser() {\r\n  return {\r\n    type: REMOVE_AUTHED_USER,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeAuthedUser } from \"../actions/authedUser\";\r\n\r\nimport Button from \"react-uwp/Button\";\r\nimport { Icon } from \"react-uwp/Icon\";\r\nimport { ListView } from \"react-uwp/ListView\";\r\nconst Nav = ({ user, dispatch, authedUser }) => {\r\n  const toggleLogin = (e) => {\r\n    if (authedUser !== null) {\r\n      dispatch(removeAuthedUser());\r\n      return;\r\n    }\r\n  };\r\n\r\n  const authedState = !!user ? true : false;\r\n\r\n  return (\r\n    <ListView\r\n      style={{ width: \"100%\" }}\r\n      listItemStyle={{\r\n        display: \"grid\",\r\n        border: \"none\",\r\n        marginBottom: -10,\r\n        marginTop: -10,\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n      }}\r\n      listSource={[\r\n        <>\r\n          <nav className=\"navbar navbar-expand-lg navbar-light text-info\">\r\n            <div className=\"container-fluid\">\r\n              {user && authedState && (\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <ul className=\"navbar-nav d-flex mb-2 mb-lg-0 ml-4\">\r\n                      <li className=\"nav-item\">\r\n                        <NavLink\r\n                          className=\"nav-link active h4\"\r\n                          data-bs-toggle=\"tooltip\"\r\n                          data-bs-placement=\"top\"\r\n                          title=\"Would You Rather\"\r\n                          to={\"/\"}\r\n                        >\r\n                          <Icon>CancelLegacy</Icon>\r\n                          WUR\r\n                          <Icon>AcceptLegacy</Icon>\r\n                        </NavLink>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link h5 \" to={\"/add\"}>\r\n                          New Question\r\n                        </NavLink>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link h5\" to={\"/leaderboard\"}>\r\n                          LeaderBoard\r\n                        </NavLink>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <ul\r\n                    className=\"navbar-nav m-0 p-0 px-1 mx-5 shadow\"\r\n                    style={{ borderRadius: 20 }}\r\n                  >\r\n                    <li className=\"nav-item my-auto\">\r\n                      <p className=\"nav-link my-1\">{user.name}</p>\r\n                    </li>\r\n                    <li className=\"nav-item lh-0\">\r\n                      <img\r\n                        className={\"border border-info mt-1 ms-4\"}\r\n                        width={50}\r\n                        src={user.avatarURL}\r\n                        alt={user.name}\r\n                        style={{\r\n                          marginLeft: 0,\r\n                          padding: 0,\r\n                          borderRadius: \"25%\",\r\n                        }}\r\n                      />\r\n                    </li>\r\n                  </ul>\r\n\r\n                  <Button className=\"text-dark\" onClick={() => toggleLogin()}>\r\n                    Logout\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </>,\r\n      ]}\r\n    />\r\n  );\r\n};\r\nfunction mapStateToProps({ authedUser, users }) {\r\n  const user = users[authedUser];\r\n  return {\r\n    user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Nav);\r\n","export function formatDate(timestamp) {\r\n  const d = new Date(timestamp);\r\n  const time = d.toLocaleTimeString(\"en-US\");\r\n  return time + \" | \" + d.toLocaleDateString();\r\n}\r\n","import React from \"react\";\r\nimport Icon from \"react-uwp/Icon\";\r\nimport { formatDate } from \"./../utils/helpers\";\r\nconst UserView = ({ user, timestamp, me, viewType = \"question\" }) => {\r\n  //  cases Obj is responsible for handling the view of the user info into diferent screens\r\n  // ex: Leaderboard, Navbar, and QS Details component.\r\n  const cases = {\r\n    normal: { col1: 6, fs: 4, imgSize: 100 },\r\n    board: { col1: 6, fs: 4, imgSize: 110 },\r\n    question: { col1: 4, fs: 5, imgSize: 110 },\r\n    login: { col1: 12, fs: 2, imgSize: 120 },\r\n  };\r\n  const currentView = cases[viewType];\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={`col-md-${currentView.col1}`}>\r\n        <img\r\n          src={user.avatarURL}\r\n          alt={`${user.name} Avatar `}\r\n          className={\"border border-info\"}\r\n          width={currentView.imgSize}\r\n          style={{\r\n            borderRadius: \"25%\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={`col-md-${currentView.col1}`}>\r\n        <p className={`fs-${currentView.fs}`}>{user.name}</p>\r\n        {me && <Icon style={{ fontSize: 20 }}>FavoriteStarFill</Icon>}\r\n        {timestamp && <span> {formatDate(timestamp)} </span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserView;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"react-uwp/Button\";\r\nimport UserView from \"./UserView\";\r\n\r\nconst User = ({ user, id, handleLogin }) => {\r\n  return (\r\n    <div className=\"shadow text-center\">\r\n      <UserView viewType=\"login\" user={user} key={user.id} />\r\n      {handleLogin && (\r\n        <Button className=\"mb-2\" onClick={() => handleLogin(id)}>\r\n          Login\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ users }, { id }) {\r\n  const user = users[id];\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","import React from \"react\";\r\nconst Alert = ({ type = \"danger\", children }) => {\r\n  const cases = {\r\n    danger: {\r\n      title: \"Error\",\r\n      text: \"Error 404, there is no Route called like that 🤷‍♂️\",\r\n      alert: \"danger\",\r\n    },\r\n    warning: {\r\n      title: \"Zero Answers\",\r\n      text: \"All Questions got Answered, Try to add new Question! 😊\",\r\n      alert: \"warning\",\r\n    },\r\n    info: {\r\n      title: \"Zero Questions\",\r\n      text: \"There is no Questions to show, Try to answer some Question! ✌\",\r\n      alert: \"info\",\r\n    },\r\n    main: {\r\n      alert: \"info\",\r\n    },\r\n  };\r\n  const currentAlert = cases[type];\r\n  return (\r\n    <div className={`alert alert-${currentAlert.alert}`} role=\"alert\">\r\n      {currentAlert !== \"main\" && (\r\n        <>\r\n          <p className=\"fs-4\">{currentAlert.title}</p>\r\n          <p className=\"fs-5\">{currentAlert.text}</p>\r\n        </>\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"text-dark fixed-bottom\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 col-lg-8 mx-auto\">\r\n            <p className=\"copyright fs-4 text-white text-center\">\r\n              Copyright &copy; Latif Essam | Front-End Web Designer\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Tabs, { Tab } from \"react-uwp/Tabs\";\r\nimport Icon from \"react-uwp/Icon\";\r\n\r\nimport User from \"./User\";\r\nimport { setAuthedUser } from \"./../actions/authedUser\";\r\nimport ListView from \"react-uwp/ListView\";\r\nimport Alert from \"./Alert\";\r\nimport Footer from \"./Footer\";\r\nimport { Separator } from \"react-uwp\";\r\nconst Login = ({ usersIds, dispatch }) => {\r\n  const handleLogin = (userId) => {\r\n    dispatch(setAuthedUser(userId));\r\n  };\r\n  return (\r\n    <>\r\n      <ListView\r\n        className=\"mx-auto \"\r\n        style={{\r\n          width: \"fit-content\",\r\n          margin: \"0 auto\",\r\n        }}\r\n        listItemStyle={{\r\n          display: \"grid\",\r\n          border: \"none\",\r\n          marginBottom: -10,\r\n          marginTop: -10,\r\n          paddingBottom: 10,\r\n          paddingTop: 10,\r\n        }}\r\n        listSource={[\r\n          <div className=\"conatiner-fluid \">\r\n            <div className=\"row\">\r\n              <div className=\"col ms-4 mx-4\">\r\n                <Tabs\r\n                  style={{ display: \"block\", margin: \"10px 0\" }}\r\n                  renderTitle={(title) => (\r\n                    <span>\r\n                      <Icon>{title}</Icon>\r\n                      <span style={{ marginLeft: 12 }}>{title}</span>\r\n                    </span>\r\n                  )}\r\n                >\r\n                  <Tab title=\"SwitchUser\">\r\n                    <div className=\"card-body\">\r\n                      <h4>\r\n                        In order to use this application you must be\r\n                        authenticated.\r\n                      </h4>\r\n                      <p className=\"fs-4\">Please pick up a user to login</p>\r\n                    </div>\r\n                    <div className=\"card-group text-center\">\r\n                      {usersIds.map((id) => (\r\n                        <User\r\n                          id={id}\r\n                          key={id}\r\n                          handleLogin={(id) => handleLogin(id)}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab title=\"Accounts\" className={\"my-4 p-2\"}>\r\n                    <Alert type={\"main\"}>\r\n                      Soon you will be able to create your own accounts.\r\n                    </Alert>\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </div>\r\n          </div>,\r\n        ]}\r\n      />\r\n      <Separator className=\"mt-5 my-5\" />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    usersIds: Object.keys(users),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","let users = {\r\n  sarahedo: {\r\n    id: \"sarahedo\",\r\n    name: \"Sarah Edo\",\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\r\n\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\r\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\r\n    },\r\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\r\n  },\r\n  tylermcginnis: {\r\n    id: \"tylermcginnis\",\r\n    name: \"Tyler McGinnis\",\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\r\n\r\n    answers: {\r\n      vthrdm985a262al8qx3do: \"optionOne\",\r\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\r\n    },\r\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\r\n  },\r\n  johndoe: {\r\n    id: \"johndoe\",\r\n    name: \"John Doe\",\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\r\n\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: \"optionOne\",\r\n      vthrdm985a262al8qx3do: \"optionTwo\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n    },\r\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\r\n  },\r\n};\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: \"8xf0y6ziyjabvozdd253nd\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"have horrible short term memory\",\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: \"have horrible long term memory\",\r\n    },\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: \"6ni6ok3ym7mf1p33lnez\",\r\n    author: \"johndoe\",\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"become a superhero\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\", \"sarahedo\"],\r\n      text: \"become a supervillain\",\r\n    },\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: \"am8ehyc8byjqgar0jgpub9\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be telekinetic\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be telepathic\",\r\n    },\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: \"loxhs1bqm25b708cmbf3g\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be a front-end developer\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be a back-end developer\",\r\n    },\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: \"vthrdm985a262al8qx3do\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"find $50 yourself\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\"],\r\n      text: \"have your best friend find $500\",\r\n    },\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: \"xj352vofupe1dqz9emx13r\",\r\n    author: \"johndoe\",\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: [\"johndoe\"],\r\n      text: \"write JavaScript\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"write Swift\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random().toString(36).substring(2, 15) +\r\n    Math.random().toString(36).substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), 1000);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), 1000);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    },\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion,\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n        },\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer,\r\n          },\r\n        },\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser]),\r\n          },\r\n        },\r\n      };\r\n\r\n      res();\r\n    }, 500);\r\n  });\r\n}\r\n","import {\r\n  _getUsers,\r\n  _getQuestions,\r\n  _saveQuestionAnswer,\r\n  _saveQuestion,\r\n} from \"./_Data\";\r\n\r\nexport function getInitialData() {\r\n  return Promise.all([_getUsers(), _getQuestions()]).then(\r\n    ([users, questions]) => ({\r\n      users,\r\n      questions,\r\n    })\r\n  );\r\n}\r\nexport function saveQuestionAnswer(info) {\r\n  return _saveQuestionAnswer(info);\r\n}\r\nexport function saveQuestion(question) {\r\n  return _saveQuestion(question);\r\n}\r\n","export const RECEIVE_USERS = \"RECEIVE_USERS\";\r\nexport const SET_USER_QUESTION = \"SET_USER_QUESTION\";\r\nexport const SET_USER_ANSWER = \"SET_USER_ANSWER\";\r\nexport const ADD_USER = \"ADD_USER\";\r\n\r\nexport function receiveUsers(users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users,\r\n  };\r\n}\r\n\r\nexport function setUserQuestion(question) {\r\n  return {\r\n    type: SET_USER_QUESTION,\r\n    question,\r\n  };\r\n}\r\n\r\nexport function setUserAnswer(answer) {\r\n  return {\r\n    type: SET_USER_ANSWER,\r\n    answer,\r\n  };\r\n}\r\n","// import { hideLoading, showLoading } from \"react-redux-loading\";\r\nimport { saveQuestion, saveQuestionAnswer } from \"../utils/API.js\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading\";\r\nimport { setUserAnswer, setUserQuestion } from \"./users.js\";\r\n\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\nexport const SET_QUESTION_ANSWER = \"SET_QUESTION_ANSWER\";\r\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions,\r\n  };\r\n}\r\n\r\nexport function addQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    question,\r\n  };\r\n}\r\nexport function setQuestionAnswer(answer) {\r\n  return {\r\n    type: SET_QUESTION_ANSWER,\r\n    answer,\r\n  };\r\n}\r\n\r\nexport function handleAddQuestion(a, b, author) {\r\n  return (dispatch) => {\r\n    dispatch(showLoading());\r\n\r\n    saveQuestion({\r\n      optionOneText: a,\r\n      optionTwoText: b,\r\n      author,\r\n    })\r\n      .then((question) => {\r\n        dispatch(addQuestion(question));\r\n        dispatch(setUserQuestion(question));\r\n      })\r\n      .then(() => dispatch(hideLoading()));\r\n  };\r\n}\r\n\r\nexport function handleSetQuestionAnswer(authedUser, qid, answer) {\r\n  return (dispatch) => {\r\n    dispatch(showLoading());\r\n\r\n    saveQuestionAnswer({ authedUser, qid, answer })\r\n      .then(() => {\r\n        dispatch(setQuestionAnswer({ authedUser, qid, answer }));\r\n        dispatch(setUserAnswer({ authedUser, qid, answer }));\r\n      })\r\n      .then(() => dispatch(hideLoading()));\r\n  };\r\n}\r\n","import { hideLoading, showLoading } from \"react-redux-loading\";\r\n\r\nimport { getInitialData } from \"./../utils/API\";\r\n\r\nimport { receiveUsers } from \"./users\";\r\nimport { receiveQuestions } from \"./questions\";\r\n\r\nexport const AUTHED_ID = \"sarah_edo\"; //as an example\r\nexport const LOGED_IN_USER = \"LOGED_IN_USER\";\r\nexport const LOGED_OUT_USER = \"LOGED_OUT_USER\";\r\n\r\nexport function handleInitialData() {\r\n  return (dispatch) => {\r\n    dispatch(showLoading());\r\n    return getInitialData().then(({ users, questions }) => {\r\n      dispatch(receiveUsers(users));\r\n      dispatch(receiveQuestions(questions));\r\n      dispatch(hideLoading());\r\n    });\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nconst Score = ({ asked, answered, total }) => {\r\n  return (\r\n    <table className=\"table text-light table-bordered border-info mt-4 fs-6 text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th>Total Score</th>\r\n          <th>Questions Asked</th>\r\n          <th>Questions Answered</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{total}</td>\r\n          <td>{asked}</td>\r\n          <td>{answered}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UserView from \"./UserView\";\r\nimport Score from \"./Score\";\r\nimport ListView from \"react-uwp/ListView\";\r\n\r\nconst Leader = ({ user, isMe }) => {\r\n  const { answers, questions } = user;\r\n  const answered = Object.keys(answers).length;\r\n  const asked = questions.length;\r\n  const total = answered + asked;\r\n\r\n  return (\r\n    <ListView\r\n      listItemStyle={{\r\n        display: \"grid\",\r\n        border: \"none\",\r\n        maxWidth: 1000,\r\n        width: window.innerWidth - 100,\r\n        minWidth: 250,\r\n        padding: 10,\r\n        margin: -9,\r\n      }}\r\n      listSource={[\r\n        <>\r\n          <UserView user={user} key={user.id} me={isMe} viewType={\"board\"} />\r\n          <Score total={total} asked={asked} answered={answered} />\r\n        </>,\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ authedUser, users }, { id }) {\r\n  const user = users[id];\r\n  const isMe = user.id === authedUser;\r\n  return {\r\n    user,\r\n    isMe,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leader);\r\n","import React from \"react\";\r\nimport Leader from \"./Leader\";\r\nimport { connect } from \"react-redux\";\r\nimport Separator from \"react-uwp/Separator\";\r\nconst Leaderboard = ({ usersIDS }) => {\r\n  return (\r\n    <div>\r\n      <ol style={{ fontSize: 40 }}>\r\n        {usersIDS.map((id) => (\r\n          <li key={id}>\r\n            <Leader id={id} />\r\n            <Separator className=\"my-2\" />\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ users }) {\r\n  const usersIDS = Object.keys(users).sort(\r\n    (a, b) =>\r\n      Object.keys(users[b].answers).length +\r\n      users[b].questions.length -\r\n      (Object.keys(users[a].answers).length + users[a].questions.length)\r\n  );\r\n  return {\r\n    usersIDS,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Separator } from \"react-uwp\";\r\nimport Button from \"react-uwp/Button\";\r\nimport TextBox from \"react-uwp/TextBox\";\r\nimport { handleAddQuestion } from \"../actions/questions\";\r\nimport { ListView } from \"react-uwp/ListView\";\r\n\r\nconst NewQS = ({ authedUser, dispatch }) => {\r\n  // used arrow Fn to handle the oncChange event using useState Hook\r\n  // the half of page is used to render the Question while typing.\r\n\r\n  const [pollOne, setPollOne] = useState(\"\");\r\n  const [pollTwo, setPollTwo] = useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(handleAddQuestion(pollOne, pollTwo, authedUser));\r\n    setPollOne(\"\");\r\n    setPollTwo(\"\");\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <ListView\r\n        listItemStyle={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          border: \"none\",\r\n          margin: 0,\r\n          padding: 12,\r\n          maxWidth: 700,\r\n          minWidth: 250,\r\n          marginTop: -10,\r\n          height: 250,\r\n          marginBottom: -10,\r\n        }}\r\n        listSource={[\r\n          <div className=\"col-md-6\">\r\n            <form onSubmit={handleSubmit}>\r\n              <label className=\"mb-2\" htmlFor=\"PollOne\">\r\n                First Poll:{\" \"}\r\n              </label>\r\n              <TextBox\r\n                onChange={(e) => setPollOne(e.target.value)}\r\n                value={pollOne}\r\n                type=\"text\"\r\n                name=\"pollOne\"\r\n                id=\"pollOne\"\r\n              />\r\n              <label className=\"mt-2 mb-1\" htmlFor=\"PollTwo\">\r\n                Second:\r\n              </label>\r\n              <TextBox\r\n                onChange={(e) => setPollTwo(e.target.value)}\r\n                value={pollTwo}\r\n                type=\"text\"\r\n                name=\"pollTwo\"\r\n                id=\"pollTwo\"\r\n              />\r\n              <Button\r\n                className=\"my-3\"\r\n                typeof=\"submit\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                Add QS\r\n              </Button>\r\n            </form>\r\n          </div>,\r\n        ]}\r\n      />\r\n      <div className=\"col-md-1\"></div>\r\n      {(pollOne.length > 0 || pollTwo.length > 0) && (\r\n        <ListView\r\n          listItemStyle={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            border: \"none\",\r\n            margin: 0,\r\n            maxWidth: 700,\r\n            width: \"fit-content\",\r\n            minWidth: 250,\r\n            marginTop: -10,\r\n            marginBottom: -10,\r\n          }}\r\n          listSource={[\r\n            <div className=\"col-md-5\" style={{ width: \"100%\" }}>\r\n              <Separator />\r\n              <p className=\"fs-2\">Would You Rather 🤷‍♂️? </p>\r\n              <Button className=\"fs-4\">{pollOne} </Button>\r\n              {pollTwo.length > 0 && (\r\n                <>\r\n                  <p className=\"my-2 fs-5\">Or</p>\r\n                  <Button className=\"fs-4\">{pollTwo}</Button>\r\n                </>\r\n              )}\r\n            </div>,\r\n          ]}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nfunction mapStateToProps({ authedUser }) {\r\n  return {\r\n    authedUser,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(NewQS);\r\n","import React from \"react\";\r\nimport Button from \"react-uwp/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst QSView = ({ q, id }) => {\r\n  return (\r\n    <>\r\n      <h5>Would you Rather ...?!</h5>\r\n      <div className=\"col-12 col-md-4 py-2 py-md-0\">\r\n        <Button>{q.optionOne.text}</Button>\r\n      </div>\r\n      <div className=\"col-12 col-md-4 py-2 py-md-0\">\r\n        <Button>{q.optionTwo.text}</Button>\r\n      </div>\r\n      <div className=\"col-12 col-md-4 py-2 py-md-0\">\r\n        <Button\r\n          className=\"text-center\"\r\n          // style={{ position: \"absolute \", bottom: 10, right: 10 }}\r\n        >\r\n          <Link className=\"btn m-0 p-0 text-info\" to={`/questions/${id}`}>\r\n            Open vote\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QSView;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ListView from \"react-uwp/ListView\";\r\nimport { connect } from \"react-redux\";\r\nimport Separator from \"react-uwp/Separator\";\r\nimport QSView from \"./QSView\";\r\nimport UserView from \"./UserView\";\r\n\r\nconst QS = ({ question: q, user, id, authedUser }) => {\r\n  return (\r\n    <ListView\r\n      listItemStyle={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        border: \"none\",\r\n        maxWidth: 700,\r\n        width: window.innerWidth - 100,\r\n        minWidth: 250,\r\n        padding: 10,\r\n        margin: -9,\r\n      }}\r\n      listSource={[\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <UserView\r\n              nameSize={4}\r\n              user={user}\r\n              imageSize={80}\r\n              timestamp={q.timestamp}\r\n              me={authedUser}\r\n            />\r\n            <Separator direction=\"row\" className=\"mb-2\" />\r\n          </div>\r\n          <div className=\"row\">\r\n            <QSView q={q} id={id} />\r\n          </div>\r\n        </div>,\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ users, questions }, { id, authedUser }) {\r\n  const question = questions[id];\r\n  return {\r\n    user: users[question.author],\r\n    question,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QS));\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"react-uwp/Button\";\r\nimport QS from \"./QS\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst Questions = ({ AnsweredQS, unAnsweredQS }) => {\r\n  // managing the taps active state.\r\n\r\n  const [currentTab, setCurrentTab] = useState(\"QS\");\r\n  // sorting the Qs to render desc by time recent => old\r\n  const sortedAnsweredQS = Object.values(AnsweredQS)\r\n    .sort((a, b) => b.timestamp - a.timestamp)\r\n    .map((q) => q);\r\n  const sortedUnAnsweredQS = Object.values(unAnsweredQS)\r\n    .sort((a, b) => b.timestamp - a.timestamp)\r\n    .map((q) => q);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"col-12\">\r\n        <ul\r\n          className=\"nav nav-pills mb-3\"\r\n          id=\"pills-tab\"\r\n          role=\"tablist\"\r\n          style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\r\n        >\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <Button\r\n              id=\"pills-home-tab\"\r\n              data-bs-toggle=\"pill\"\r\n              data-bs-target=\"#pills-home\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"pills-home\"\r\n              aria-selected=\"true\"\r\n              icon=\"Handwriting\"\r\n              style={{\r\n                color: currentTab === \"QS\" ? \"white\" : \"black\",\r\n              }}\r\n              background={\r\n                currentTab === \"QS\" ? \"#E65100\" : \"rgba(255, 255, 255, 0.4)\"\r\n              }\r\n              onClick={() => setCurrentTab(\"QS\")}\r\n            >\r\n              Question to Answer\r\n            </Button>\r\n          </li>\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <Button\r\n              id=\"pills-profile-tab\"\r\n              data-bs-toggle=\"pill\"\r\n              data-bs-target=\"#pills-profile\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"pills-profile\"\r\n              aria-selected=\"false\"\r\n              icon=\"CheckmarkListviewLegacy\"\r\n              style={{\r\n                color: currentTab === \"Ans\" ? \"white\" : \"black\",\r\n              }}\r\n              background={\r\n                currentTab === \"QS\" ? \"rgba(255, 255, 255, 0.2)\" : \"#E65100\"\r\n              }\r\n              onClick={() => setCurrentTab(\"Ans\")}\r\n            >\r\n              Questions got Answered\r\n            </Button>\r\n          </li>\r\n        </ul>\r\n        <div\r\n          className=\"tab-content py-5\"\r\n          id=\"pills-tabContent\"\r\n          style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n        >\r\n          <div\r\n            className=\"tab-pane fade show active\"\r\n            id=\"pills-home\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"pills-home-tab\"\r\n          >\r\n            <div style={{ margin: \"10 10 10 0\" }}>\r\n              {sortedUnAnsweredQS.length === 0 ? (\r\n                <Alert type=\"info\" />\r\n              ) : (\r\n                <ul style={{ listStyle: \"none\" }}>\r\n                  {sortedUnAnsweredQS.map((q) => (\r\n                    <li style={{ marginBottom: 15 }} key={q.id}>\r\n                      <QS question={q} id={q.id} />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"tab-pane fade\"\r\n            id=\"pills-profile\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"pills-profile-tab\"\r\n          >\r\n            <div style={{ margin: \"10 10 10 0\" }}>\r\n              {sortedAnsweredQS === 0 ? (\r\n                <Alert type=\"info\" />\r\n              ) : (\r\n                <ul style={{ listStyle: \"none\" }}>\r\n                  {sortedAnsweredQS.map((q) => (\r\n                    <li style={{ marginBottom: 15 }} key={q.id}>\r\n                      <QS question={q} id={q.id} />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n  const unAnsweredQS = Object.values(questions).filter(\r\n    (question) =>\r\n      !question.optionOne.votes.includes(authedUser) &&\r\n      !question.optionTwo.votes.includes(authedUser)\r\n  );\r\n  const AnsweredQS = Object.values(questions).filter(\r\n    (question) =>\r\n      question.optionOne.votes.includes(authedUser) ||\r\n      question.optionTwo.votes.includes(authedUser)\r\n  );\r\n  return {\r\n    unAnsweredQS,\r\n    AnsweredQS,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Questions);\r\n","import React from \"react\";\r\nimport \"./css/separator.css\";\r\n\r\nconst Separator = ({ ...props }) => (\r\n  <section className=\"spikes mb-5\" {...props}></section>\r\n);\r\n\r\nexport default Separator;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"react-uwp/Button\";\r\n\r\nconst QSDetailsVote = ({ question: q, saveQsAns }) => {\r\n  const [currentVote, setCurrentVote] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const selectedVote = e.currentTarget.value;\r\n    setCurrentVote(selectedVote);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    saveQsAns(currentVote);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-3\">\r\n      <div className=\"row\">\r\n        <h5>Would you Rather ...?!</h5>\r\n        <div className=\"col-md-5\">\r\n          <p className=\"fs-6 fw-light\">{q.optionOne.text}</p>\r\n          <input\r\n            className=\"form-check-input mx-4\"\r\n            type=\"radio\"\r\n            id=\"optionOne\"\r\n            value=\"optionOne\"\r\n            onChange={handleChange}\r\n            name=\"answer\"\r\n            checked={currentVote === \"optionOne\" ? true : false}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-5\">\r\n          <p className=\"fs-6 fw-light\">{q.optionTwo.text}</p>\r\n          <input\r\n            className=\"form-check-input mx-4\"\r\n            type=\"radio\"\r\n            id=\"optionTwo\"\r\n            value=\"optionTwo\"\r\n            name=\"answer\"\r\n            onChange={handleChange}\r\n            checked={currentVote === \"optionTwo\" ? true : false}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <Button typeof=\"submit\" disabled={currentVote === \"\"}>\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default QSDetailsVote;\r\n","import React from \"react\";\r\nimport Separator from \"react-uwp/Separator\";\r\nimport Button from \"react-uwp/Button\";\r\nimport Icon from \"react-uwp/Icon\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst QSDetailsResult = ({ question: q, vote }) => {\r\n  const votesAnswer1 = q.optionOne.votes.length;\r\n  const votesAnswer2 = q.optionTwo.votes.length;\r\n  const allAnswers = votesAnswer1 + votesAnswer2;\r\n  const percentageAnswer1 =\r\n    votesAnswer1 === 0 ? 0 : Math.round((votesAnswer1 / allAnswers) * 100);\r\n  const percentageAnswer2 =\r\n    votesAnswer2 === 0 ? 0 : Math.round((votesAnswer2 / allAnswers) * 100);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <p className=\"fs-3\">Would you Rather ...?!</p>\r\n      <div className=\"col-md-5\">\r\n        <div className=\"progress\">\r\n          <div\r\n            className=\"progress-bar bg-success\"\r\n            role=\"progressbar\"\r\n            style={{ width: `${percentageAnswer1}%` }}\r\n          ></div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <p> votes : {votesAnswer1}</p>\r\n          {vote === \"optionOne\" && (\r\n            <span className=\"badge badge-info\">\r\n              <Icon>CheckmarkListviewLegacy</Icon>\r\n            </span>\r\n          )}\r\n          <span>{percentageAnswer1}%</span>\r\n        </div>\r\n        <p className=\"fs-4 my-0 fw-light\">{q.optionOne.text}</p>\r\n      </div>\r\n      <div className=\"col-md-1 mx-auto\">\r\n        <Separator\r\n          className=\"ms-3\"\r\n          direction=\"column\"\r\n          style={{ height: \"100%\" }}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-5\">\r\n        <div className=\"progress\">\r\n          <div\r\n            className=\"progress-bar bg-success\"\r\n            role=\"progressbar\"\r\n            style={{ width: `${percentageAnswer2}%` }}\r\n          ></div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <p> votes : {votesAnswer2}</p>\r\n          {vote === \"optionTwo\" && (\r\n            <span className=\"badge badge-info mt-0\">\r\n              <Icon>EditLegacy</Icon>\r\n            </span>\r\n          )}\r\n          <span>{percentageAnswer2}%</span>\r\n        </div>\r\n        <p className=\"fs-4 my-0 fw-light\">{q.optionTwo.text}</p>\r\n      </div>\r\n      <Separator />\r\n      <Button className=\"text-center mx-auto mt-2\" style={{ width: \"30%\" }}>\r\n        <NavLink className=\"btn m-0 p-0 fs-5 text-success\" to={\"/\"} exact>\r\n          back\r\n        </NavLink>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QSDetailsResult;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ListView from \"react-uwp/ListView\";\r\nimport { connect } from \"react-redux\";\r\nimport Separator from \"react-uwp/Separator\";\r\nimport QSDetailsVote from \"./QSDetailsVote\";\r\nimport QSDetailsResult from \"./QSDetailsResult\";\r\nimport UserView from \"./UserView\";\r\nimport { handleSetQuestionAnswer } from \"../actions/questions\";\r\n\r\nconst QSDetails = ({\r\n  authedUser,\r\n  id,\r\n  question: q,\r\n  isAnswered,\r\n  vote,\r\n  user,\r\n  dispatch,\r\n}) => {\r\n  const saveQsAns = (answer) => {\r\n    dispatch(handleSetQuestionAnswer(authedUser, id, answer));\r\n  };\r\n\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", (e) => setScreenWidth(window.innerWidth));\r\n  }, [screenWidth]);\r\n  return q ? (\r\n    <ListView\r\n      listItemStyle={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        border: \"none\",\r\n        maxWidth: 700,\r\n        width: screenWidth - 100,\r\n        minWidth: 250,\r\n      }}\r\n      listSource={[\r\n        <div className=\"container\">\r\n          <UserView user={user} timestamp={q.timestamp} />\r\n          <Separator />\r\n          <div className=\"row\">\r\n            {isAnswered ? (\r\n              <QSDetailsResult question={q} vote={vote} />\r\n            ) : (\r\n              <QSDetailsVote question={q} saveQsAns={saveQsAns} />\r\n            )}\r\n          </div>\r\n        </div>,\r\n      ]}\r\n    />\r\n  ) : (\r\n    <p>Error Question is not found</p>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n  const id = props.match.params.id;\r\n  const question = questions[id];\r\n  const questionExists = !question ? false : true;\r\n  const isAnswered = !!question\r\n    ? question.optionOne.votes.includes(authedUser) ||\r\n      question.optionTwo.votes.includes(authedUser)\r\n    : false;\r\n  const vote = isAnswered\r\n    ? question.optionOne.votes.includes(authedUser)\r\n      ? \"optionOne\"\r\n      : \"optionTwo\"\r\n    : null;\r\n  const user = users && question ? users[question.author] : null;\r\n  return {\r\n    authedUser,\r\n    id,\r\n    question,\r\n    questionExists,\r\n    isAnswered,\r\n    vote,\r\n    user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(QSDetails);\r\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// React UWP\nimport { Theme, getTheme } from \"react-uwp/Theme\";\n\n// import LoadingBar from \"react-redux-loading\";\nimport Nav from \"./Nav\";\nimport Login from \"./Login\";\n\nimport { handleInitialData } from \"../actions/shared\";\nimport Leaderboard from \"./Leaderboard\";\nimport NewQS from \"./NewQS\";\nimport Questions from \"./Questions\";\nimport Separator from \"./Separator\";\nimport QSDetails from \"./QSDetails\";\nimport Alert from \"./Alert\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData());\n  }\n  images = {\n    1: \"https://images.unsplash.com/photo-1612703232530-98a2fb351e9b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n    2: \"https://pixabay.com/get/57e9d042494fad00f5d89960c62e367d1d3bdbe45550_1920.jpg\",\n    3: \"https://images.unsplash.com/photo-1606055854326-12a2fdcac6c0?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n  };\n  render() {\n    // checking if the all data is loaded and user has loged in\n    const { readyState, authedState } = this.props;\n    return (\n      <Fragment>\n        <Theme\n          theme={getTheme({\n            themeName: \"dark\",\n            accent: \"#0078D7\",\n            useFluentDesign: true,\n            desktopBackgroundImage: this.images[3],\n          })}\n        >\n          <header>\n            {readyState && authedState && (\n              <>\n                <Nav />\n                <Separator />\n              </>\n            )}\n          </header>\n          <main className=\"container\">\n            {readyState && authedState && (\n              <Switch>\n                <Route path=\"/\" exact component={Questions} />\n                <Route path=\"/questions/:id\" exact component={QSDetails} />\n\n                <Route path=\"/add\" exact component={NewQS} />\n\n                <Route path=\"/leaderboard\" exact component={Leaderboard} />\n                <Route>\n                  <Alert type=\"danger\" />\n                </Route>\n              </Switch>\n            )}\n            {readyState && !authedState && <Login />}\n          </main>\n        </Theme>\n      </Fragment>\n    );\n  }\n}\nfunction mapStateToProps({ authedUser, users, questions }) {\n  return {\n    users,\n    readyState:\n      Object.keys(users).length > 0 && Object.keys(questions).length > 0,\n    authedState: authedUser != null,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n  console.log(\"The action: \", action);\r\n  const returnValue = next(action);\r\n  console.log(\"The new state: \", returnValue);\r\n  console.groupEnd();\r\n  return returnValue;\r\n};\r\nexport default logger;\r\n","import { applyMiddleware } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"./logger\";\r\n\r\nexport default applyMiddleware(thunk, logger);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport authedUser from \"./autheUser\";\r\nimport users from \"./users\";\r\nimport questions from \"./questions\";\r\n\r\nexport default combineReducers({\r\n  authedUser,\r\n  users,\r\n  questions,\r\n});\r\n","import { SET_AUTHED_USER, REMOVE_AUTHED_USER } from \"./../actions/authedUser\";\r\n\r\nexport default function authedUser(state = null, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHED_USER:\r\n      return action.id;\r\n    case REMOVE_AUTHED_USER:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_USERS,\r\n  ADD_USER,\r\n  SET_USER_QUESTION,\r\n  SET_USER_ANSWER,\r\n} from \"../actions/users\";\r\n\r\nexport default function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users,\r\n      };\r\n    case ADD_USER:\r\n      return state.concat([action.user]);\r\n    case SET_USER_QUESTION:\r\n      const { author } = action.question;\r\n      return {\r\n        ...state,\r\n        [author]: {\r\n          ...state[author],\r\n          questions: state[author].questions.concat([action.question.id]),\r\n        },\r\n      };\r\n    case SET_USER_ANSWER:\r\n      const { authedUser } = action.answer;\r\n      return {\r\n        ...state,\r\n        [authedUser]: {\r\n          ...state[authedUser],\r\n          answers: {\r\n            ...state[authedUser].answers,\r\n            [action.answer.qid]: action.answer.answer,\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_QUESTION,\r\n  RECEIVE_QUESTIONS,\r\n  SET_QUESTION_ANSWER,\r\n} from \"./../actions/questions\";\r\n\r\nexport default function questions(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions,\r\n      };\r\n    case ADD_QUESTION:\r\n      const { question } = action;\r\n      return {\r\n        ...state,\r\n        [question.id]: question,\r\n      };\r\n\r\n    case SET_QUESTION_ANSWER:\r\n      const { authedUser, qid, answer } = action.answer;\r\n      return {\r\n        ...state,\r\n        [qid]: {\r\n          ...state[qid],\r\n          [answer]: {\r\n            ...state[qid][answer],\r\n            votes: state[qid][answer].votes.concat([authedUser]),\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport middleware from \"./middleware\";\nimport reducer from \"./reducers\";\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}